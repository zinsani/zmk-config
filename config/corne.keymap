/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/backlight.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/pointing.h>
#include <dt-bindings/zmk/rgb.h>

#define DEFAULT 0
#define COLEMAK 1
#define LOWER   2
#define RAISE   3
#define MISC    4

/ {
    combos { compatible = "zmk,combos"; };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
&kp TAB            &kp Q  &kp W  &kp E      &kp R  &kp T                  &kp Y                &kp U  &kp I       &kp O    &kp P     &kp BSPC
&mt LEFT_ALT CAPS  &kp A  &kp S  &kp D      &kp F  &kp G                  &kp H                &kp J  &kp K       &kp L    &kp SEMI  &mt RIGHT_ALT SQT
&kp LSHFT          &kp Z  &kp X  &kp C      &kp V  &kp B                  &kp N                &kp M  &kp COMMA   &kp DOT  &kp FSLH  &mt LCTRL ENTER
                                 &kp LCTRL  &mo 2  &mt LEFT_GUI ESCAPE    &mt RIGHT_GUI SPACE  &mo 3  &kp RSHIFT
            >;
        };

        colemak_layer {
            bindings = <
&kp TAB            &kp Q  &kp W  &kp F      &kp P  &kp G                  &kp J                &kp L  &kp U            &kp Y       &kp SEMI   &kp BSPC
&mt LEFT_ALT CAPS  &kp A  &kp R  &kp S      &kp T  &kp D                  &kp H                &kp N  &kp E            &kp I       &kp O      &mt RIGHT_ALT SQT
&kp LSHFT          &kp Z  &kp X  &kp C      &kp V  &kp B                  &kp K                &kp M  &kp COMMA        &kp PERIOD  &kp SLASH  &mt LCTRL ENTER
                                 &kp LCTRL  &mo 2  &mt LEFT_GUI ESCAPE    &mt RIGHT_GUI SPACE  &mo 3  &kp RIGHT_SHIFT
            >;
        };

        lower_layer {
            bindings = <
&kp GRAVE  &kp EXCL      &kp AT        &kp HASH         &kp DLLR                           &kp PRCNT                                 &kp CARET  &kp AMPS   &kp ASTRK  &kp LPAR  &kp RPAR  &kp TILDE
&trans     &bt BT_PRV    &bt BT_NXT    &mkp LCLK        &mkp RCLK                          &mkp MCLK                                 &kp MINUS  &kp EQUAL  &kp LBKT   &kp RBKT  &kp BSLH  &trans
&trans     &out OUT_USB  &out OUT_BLE  &kp C_AC_SEARCH  &kp C_AC_DESKTOP_SHOW_ALL_WINDOWS  &kp C_AC_DESKTOP_SHOW_ALL_APPLICATIONS    &kp UNDER  &kp PLUS   &kp LBRC   &kp RBRC  &kp PIPE  &trans
                                       &trans           &trans                             &trans                                    &trans     &trans     &trans
            >;

            label = "symbol";
        };

        raise_layer {
            bindings = <
&tog 1  &kp N1           &kp N2          &kp N3           &kp N4        &kp N5              &kp N6           &kp N7           &kp N8           &kp N9           &kp N0    &trans
&trans  &bt BT_SEL 0     &bt BT_SEL 1    &bt BT_SEL 2     &bt BT_SEL 3  &bt BT_SEL 4        &kp LEFT         &kp DOWN         &kp UP           &kp RIGHT        &kp HOME  &mt LEFT_ALT PG_UP
&trans  &rgb_ug RGB_OFF  &rgb_ug RGB_ON  &rgb_ug RGB_EFF  &bt BT_CLR    &bt BT_CLR_ALL      &rgb_ug RGB_SPD  &rgb_ug RGB_SPI  &rgb_ug RGB_BRI  &rgb_ug RGB_BRD  &kp END   &mt LEFT_SHIFT PAGE_DOWN
                                         &trans           &kp DELETE    &mt LEFT_GUI INS    &trans           &trans           &trans
            >;

            label = "number";
        };

        misc_layer {
            bindings = <
&trans  &kp F1        &kp F2         &kp F3  &kp F4          &kp F5         &kp F6      &kp F7           &kp F8           &kp F9           &kp F10          &kp F11
&trans  &kp K_VOL_UP  &kp C_BRI_INC  &none   &bt BT_CLR      &sys_reset     &bl BL_INC  &rgb_ug RGB_SAI  &rgb_ug RGB_HUI  &rgb_ug RGB_BRI  &kp PRINTSCREEN  &mt RIGHT_SHIFT F12
&trans  &kp K_VOL_DN  &kp C_BRI_DEC  &none   &bt BT_CLR_ALL  &bootloader    &bl BL_DEC  &rgb_ug RGB_SAD  &rgb_ug RGB_HUD  &rgb_ug RGB_BRD  &kp SCROLLLOCK   &trans
                                     &none   &trans          &none          &none       &trans           &none
            >;
        };
    };

    conditional_layers {
        compatible = "zmk,conditional-layers";

        misc {
            if-layers = <2 3>;
            then-layer = <4>;
        };
    };
};
